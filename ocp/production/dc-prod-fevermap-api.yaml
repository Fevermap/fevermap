---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/connects-to: fevermap-db
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: null
  generation: 1
  labels:
    app: fevermap
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: fevermap-api
    app.kubernetes.io/name: python
    app.kubernetes.io/part-of: fevermap
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: "3.6"
    application: fevermap
  name: fevermap-api
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    deploymentconfig: fevermap-api
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deploymentconfig: fevermap-api
      name: ${name}-api
    spec:
      containers:
        - env:
            - name: FEVERMAP_API_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  key: database-uri
                  name: fevermap-api-db
            - name: FLASK_ENV
              value: kube
            - name: APP_SCRIPT
              value: entrypoint.sh
            - name: APPDIR
              value: /opt/app-root/src
          image: fevermap-staging/fevermap-api:release
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: fevermap-api
          ports:
            - containerPort: 9000
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/app-root/src/entrypoint.sh
              name: uwsgi-starter
              readOnly: true
              subPath: entrypoint.sh
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 360
            name: fevermap-api-uwsgi-starter
          name: uwsgi-starter
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - fevermap-api
        from:
          kind: ImageStreamTag
          name: fevermap-api:release
          namespace: fevermap-staging
      type: ImageChange
    - type: ConfigChange
