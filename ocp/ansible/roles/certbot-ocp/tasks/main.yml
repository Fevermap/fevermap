---

- name: Create certbot Service Account
  tags: certbot
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        labels:
          app: "{{ cb_label }}"
        name: "{{ cb_sa }}"
        namespace: "{{ project_name }}"

- name: Bind certbot SA to role able to modify routes
  tags: certbot
  k8s:
    state: "{{ state }}"
    definition:
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        labels:
          app: "{{ cb_label }}"
        name: "{{ cb_sa }}"
      subjects:
        - kind: ServiceAccount
          name: "{{ cb_sa }}"
          namespace: "{{ project_name }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: admin

- name: Create persistent volume for Let's Encrypt data
  tags: certbot
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        labels:
          app: "{{ cb_label }}"
        finalizers:
          - kubernetes.io/pvc-protection
        name: certbot-letsencrypt
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ certbot_storage_size }}"

- name: Create certbot service
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: "{{ cb_label }}"
        name: "{{ cb_name }}"
      spec:
        ports:
          - name: 8080-tcp
            port: 8080
            protocol: TCP
            targetPort: 8080
        selector:
          name: "{{ cb_name }}"
        sessionAffinity: None
        type: ClusterIP

#
# Ansible fails often with pod item. Let's delete it first to get
# rid of such errors. It doesn't hurt to get rerun at any time.
#
- name: Just in case, delete certbot pod
  tags: certbot
  k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: "{{ cb_name }}"

- name: Create Pod for certbot
  tags: certbot
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        labels:
          app: "{{ cb_label }}"
          name: "{{ cb_name }}"
        name: "{{ cb_name }}"
      spec:
        containers:
          - env:
              - name: ROUTE_LABEL
                value: "{{ cb_route_label }}"
              - name: EMAIL
                value: "{{ cb_email }}"
              - name: CERTBOT_EXTRA_OPTS
                value: "{{ cb_extra_opts }}"
            image: "{{ cb_image }}"
            imagePullPolicy: IfNotPresent
            name: "{{ cb_name }}"
            ports:
              - containerPort: 8080
                protocol: TCP
            resources:
              limits:
                cpu: '1'
                memory: 512Mi
              requests:
                cpu: 30m
                memory: 409Mi
            volumeMounts:
              - mountPath: /etc/letsencrypt
                name: letsencrypt
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        serviceAccount: "{{ cb_sa }}"
        serviceAccountName: "{{ cb_sa }}"
        terminationGracePeriodSeconds: 10
        volumes:
          - name: letsencrypt
            persistentVolumeClaim:
              claimName: certbot-letsencrypt

- name: Create cron job
  tags: certbot
  k8s:
    state: "{{ state }}"
    definition:
      apiVersion: batch/v1beta1
      kind: CronJob
      metadata:
        labels:
          app: "{{ cb_label }}"
        name: "{{ cb_name }}"
      spec:
        concurrencyPolicy: Forbid
        failedJobsHistoryLimit: 1
        jobTemplate:
          spec:
            template:
              metadata:
                labels:
                  parent: certbot-ocp
                  name: "{{ cb_name }}"
                  app: "{{ cb_label }}"
              spec:
                containers:
                  - env:
                      - name: ROUTE_LABEL
                        value: "{{ cb_route_label }}"
                      - name: EMAIL
                        value: "{{ cb_email }}"
                      - name: CERTBOT_EXTRA_OPTS
                        value: "{{ cb_extra_opts }}"
                    image: "{{ cb_image }}"
                    imagePullPolicy: IfNotPresent
                    name: "{{ cb_name }}"
                    ports:
                      - containerPort: 8080
                        protocol: TCP
                    resources:
                      limits:
                        memory: 512Mi
                      requests:
                        memory: 256Mi
                    volumeMounts:
                      - mountPath: /etc/letsencrypt
                        name: letsencrypt
                dnsPolicy: ClusterFirst
                restartPolicy: Never
                serviceAccount: "{{ cb_sa }}"
                serviceAccountName: "{{ cb_sa }}"
                terminationGracePeriodSeconds: 10
                volumes:
                  - name: letsencrypt
                    persistentVolumeClaim:
                      claimName: certbot-letsencrypt
        schedule: '0 23 * * *'
        successfulJobsHistoryLimit: 1
        suspend: false
