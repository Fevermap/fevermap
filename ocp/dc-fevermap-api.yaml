apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/connects-to: fevermap-db
  labels:
    app: fevermap-api
    app.kubernetes.io/component: fevermap-api
    app.kubernetes.io/instance: fevermap-api
    app.kubernetes.io/part-of: fevermap
  name: fevermap-api
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    app: fevermap-api
    deploymentconfig: fevermap-api
  strategy:
    activeDeadlineSeconds: 21600
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fevermap-api
        deploymentconfig: fevermap-api
    spec:
      containers:
        - env:
            - name: FEVERMAP_API_DATABASE_URI
              value: 'mysql://fevermap:feverpass@fevermap-db/fevermap?charset=utf8mb4'
            - name: FLASK_ENV
              value: kube
            - name: APP_SCRIPT
              value: entrypoint.sh
            - name: APPDIR
              value: /opt/app-root/src
            - name: UWSGIPLUGINLINE
          image: fevermap-api:latest
          imagePullPolicy: IfNotPresent
          name: fevermap-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - fevermap-api
        from:
          kind: ImageStreamTag
          name: 'fevermap-api:latest'
      type: ImageChange
    - type: ConfigChange
